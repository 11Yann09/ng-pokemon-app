{"ast":null,"code":"import { POKEMONS } from \"./mock-pokemon-list\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PokemonService {\n  constructor(http) {\n    this.http = http;\n  }\n  getPokemonList() {\n    // return POKEMONS;\n  }\n  getPokemonById(pokemonId) {\n    return POKEMONS.find(pokemon => pokemon.id == pokemonId);\n  }\n  getPokemonTypeListe() {\n    return [\"Plante\", \"Feu\", \"Eau\", \"Insecte\", \"Normal\", \"Electrik\", \"Poison\", \"Fée\", \"Vol\", \"Combat\", \"Psy\"];\n  }\n  static #_ = this.ɵfac = function PokemonService_Factory(t) {\n    return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PokemonService,\n    factory: PokemonService.ɵfac\n  });\n}","map":{"version":3,"names":["POKEMONS","PokemonService","constructor","http","getPokemonList","getPokemonById","pokemonId","find","pokemon","id","getPokemonTypeListe","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["C:\\Users\\YANN\\Dev\\ng-pokemon-app\\src\\app\\pokemon\\pokemon.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Pokemon } from \"./pokemon\";\nimport { POKEMONS } from \"./mock-pokemon-list\";\n\n@Injectable()\nexport class PokemonService {\n  constructor(private http: HttpClient) {}\n\n  getPokemonList(): Ob {\n    // return POKEMONS;\n\n  }\n\n  getPokemonById(pokemonId: number): Pokemon | undefined {\n    return POKEMONS.find((pokemon) => pokemon.id == pokemonId);\n  }\n\n  getPokemonTypeListe(): string[] {\n    return [\n      \"Plante\",\n      \"Feu\",\n      \"Eau\",\n      \"Insecte\",\n      \"Normal\",\n      \"Electrik\",\n      \"Poison\",\n      \"Fée\",\n      \"Vol\",\n      \"Combat\",\n      \"Psy\",\n    ];\n  }\n}\n"],"mappings":"AAGA,SAASA,QAAQ,QAAQ,qBAAqB;;;AAG9C,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,cAAcA,CAAA;IACZ;EAAA;EAIFC,cAAcA,CAACC,SAAiB;IAC9B,OAAON,QAAQ,CAACO,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,IAAIH,SAAS,CAAC;EAC5D;EAEAI,mBAAmBA,CAAA;IACjB,OAAO,CACL,QAAQ,EACR,KAAK,EACL,KAAK,EACL,SAAS,EACT,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,KAAK,EACL,KAAK,EACL,QAAQ,EACR,KAAK,CACN;EACH;EAAC,QAAAC,CAAA,G;qBA1BUV,cAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdf,cAAc;IAAAgB,OAAA,EAAdhB,cAAc,CAAAiB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}