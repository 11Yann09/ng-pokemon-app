{"ast":null,"code":"import { catchError, of, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PokemonService {\n  constructor(http) {\n    this.http = http;\n  }\n  getPokemonList() {\n    return this.http.get(\"api/pokemons\").pipe(tap(pokemonList => console.table(pokemonList)), catchError(error => {\n      console.log(error);\n      return of([]);\n    }));\n  }\n  getPokemonById(pokemonId) {\n    return this.http.get(`api/pokemo/${pokemonId}`).pipe(tap(pokemon => console.log(pokemon)), catchError(error => {\n      console.log(error);\n      return of(undefined);\n    }));\n  }\n  log(response) {}\n  getPokemonTypeListe() {\n    return [\"Plante\", \"Feu\", \"Eau\", \"Insecte\", \"Normal\", \"Electrik\", \"Poison\", \"Fée\", \"Vol\", \"Combat\", \"Psy\"];\n  }\n  static #_ = this.ɵfac = function PokemonService_Factory(t) {\n    return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PokemonService,\n    factory: PokemonService.ɵfac\n  });\n}","map":{"version":3,"names":["catchError","of","tap","PokemonService","constructor","http","getPokemonList","get","pipe","pokemonList","console","table","error","log","getPokemonById","pokemonId","pokemon","undefined","response","getPokemonTypeListe","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["C:\\Users\\YANN\\Dev\\ng-pokemon-app\\src\\app\\pokemon\\pokemon.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { catchError, Observable, of, tap } from \"rxjs\";\nimport { Pokemon } from \"./pokemon\";\n\n@Injectable()\nexport class PokemonService {\n  constructor(private http: HttpClient) {}\n\n  getPokemonList(): Observable<Pokemon[]> {\n    return this.http.get<Pokemon[]>(\"api/pokemons\").pipe(\n      tap((pokemonList) => console.table(pokemonList)),\n      catchError((error) => {\n        console.log(error);\n        return of([]);\n      })\n    );\n  }\n\n  getPokemonById(pokemonId: number): Observable<Pokemon | undefined> {\n    return this.http.get<Pokemon>(`api/pokemo/${pokemonId}`).pipe(\n      tap((pokemon) => console.log(pokemon)),\n      catchError((error) => {\n        console.log(error);\n        return of(undefined);\n      })\n    );\n  }\n\n  private log(response: Pokemon[]) {\n\n  }\n\n  getPokemonTypeListe(): string[] {\n    return [\n      \"Plante\",\n      \"Feu\",\n      \"Eau\",\n      \"Insecte\",\n      \"Normal\",\n      \"Electrik\",\n      \"Poison\",\n      \"Fée\",\n      \"Vol\",\n      \"Combat\",\n      \"Psy\",\n    ];\n  }\n}\n"],"mappings":"AAEA,SAASA,UAAU,EAAcC,EAAE,EAAEC,GAAG,QAAQ,MAAM;;;AAItD,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,cAAc,CAAC,CAACC,IAAI,CAClDN,GAAG,CAAEO,WAAW,IAAKC,OAAO,CAACC,KAAK,CAACF,WAAW,CAAC,CAAC,EAChDT,UAAU,CAAEY,KAAK,IAAI;MACnBF,OAAO,CAACG,GAAG,CAACD,KAAK,CAAC;MAClB,OAAOX,EAAE,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CACH;EACH;EAEAa,cAAcA,CAACC,SAAiB;IAC9B,OAAO,IAAI,CAACV,IAAI,CAACE,GAAG,CAAU,cAAcQ,SAAS,EAAE,CAAC,CAACP,IAAI,CAC3DN,GAAG,CAAEc,OAAO,IAAKN,OAAO,CAACG,GAAG,CAACG,OAAO,CAAC,CAAC,EACtChB,UAAU,CAAEY,KAAK,IAAI;MACnBF,OAAO,CAACG,GAAG,CAACD,KAAK,CAAC;MAClB,OAAOX,EAAE,CAACgB,SAAS,CAAC;IACtB,CAAC,CAAC,CACH;EACH;EAEQJ,GAAGA,CAACK,QAAmB,GAE/B;EAEAC,mBAAmBA,CAAA;IACjB,OAAO,CACL,QAAQ,EACR,KAAK,EACL,KAAK,EACL,SAAS,EACT,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,KAAK,EACL,KAAK,EACL,QAAQ,EACR,KAAK,CACN;EACH;EAAC,QAAAC,CAAA,G;qBAzCUjB,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdtB,cAAc;IAAAuB,OAAA,EAAdvB,cAAc,CAAAwB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}