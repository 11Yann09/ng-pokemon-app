{"ast":null,"code":"import { POKEMONS } from \"./mock-pokemon-list\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./border-card.directive\";\nimport * as i3 from \"./pokemon-type-color.pipe\";\nfunction AppComponent_div_4_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵpipe(1, \"pokemonTypeColor\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r3 = ctx.$implicit;\n    i0.ɵɵclassMap(i0.ɵɵpipeBind1(1, 4, type_r3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", type_r3, \" \");\n  }\n}\nfunction AppComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"div\", 6);\n    i0.ɵɵelement(3, \"img\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 8)(5, \"div\", 9)(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\")(9, \"small\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(12, AppComponent_div_4_span_12_Template, 3, 6, \"span\", 10);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const pokemon_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", pokemon_r1.picture, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(pokemon_r1.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 4, pokemon_r1.created, \"dd/MM/yyyy\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", pokemon_r1.types);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    // Charger la liste des 12 pokemons dans le composant\n    this.pokemonList = POKEMONS;\n  }\n  ngOnInit() {\n    console.table(this.pokemonList);\n  }\n  // Passer en paramètre de la méthode selectPokemon un pokemon issue du mock de pokemon créee précédemment\n  selectPokemon(pokemonId) {\n    const pokemon = this.pokemonList.find(pokemon => pokemon.id == +pokemonId);\n    if (pokemon) {\n      console.log(`Vous avez demandé le pokemon ${pokemon.name} !`);\n      this.pokemonSelected = pokemon;\n    } else {\n      console.log(`Le pokemon demandé n'existe pas !`);\n      this.pokemonSelected = pokemon;\n    }\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"center\"], [1, \"container\"], [1, \"row\"], [\"class\", \"col m4 s6\", \"pokemonBorderCard\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"pokemonBorderCard\", \"\", 1, \"col\", \"m4\", \"s6\"], [1, \"card\", \"horizontal\"], [1, \"card-image\"], [3, \"src\"], [1, \"card-stacked\"], [1, \"card-content\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \" Liste des Pok\\u00E9mons \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n        i0.ɵɵtemplate(4, AppComponent_div_4_Template, 13, 7, \"div\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pokemonList);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.BorderCardDirective, i1.DatePipe, i3.PokemonTypeColorPipe],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["POKEMONS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassMap","ɵɵpipeBind1","type_r3","ɵɵadvance","ɵɵtextInterpolate1","ɵɵelement","ɵɵtemplate","AppComponent_div_4_span_12_Template","ɵɵproperty","pokemon_r1","picture","ɵɵsanitizeUrl","ɵɵtextInterpolate","name","ɵɵpipeBind2","created","types","AppComponent","constructor","pokemonList","ngOnInit","console","table","selectPokemon","pokemonId","pokemon","find","id","log","pokemonSelected","_","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_div_4_Template"],"sources":["C:\\Users\\YANN\\Dev\\ng-pokemon-app\\src\\app\\app.component.ts","C:\\Users\\YANN\\Dev\\ng-pokemon-app\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { POKEMONS } from \"./mock-pokemon-list\";\nimport { Pokemon } from \"./pokemon\";\n\n@Component({\n  selector: \"app-root\",\n  // Modifier le template pour affichier le message suivant : Liste de Pokémons\n  templateUrl: \"./app.component.html\",\n})\nexport class AppComponent implements OnInit {\n  // Charger la liste des 12 pokemons dans le composant\n  pokemonList: Pokemon[] = POKEMONS;\n  pokemonSelected: Pokemon | undefined;\n\n  ngOnInit() {\n    console.table(this.pokemonList);\n  }\n\n  // Passer en paramètre de la méthode selectPokemon un pokemon issue du mock de pokemon créee précédemment\n  selectPokemon(pokemonId: string) {\n    const pokemon: Pokemon | undefined = this.pokemonList.find(\n      (pokemon) => pokemon.id == +pokemonId\n    );\n\n    if (pokemon) {\n      console.log(`Vous avez demandé le pokemon ${pokemon.name} !`);\n      this.pokemonSelected = pokemon;\n    } else {\n      console.log(`Le pokemon demandé n'existe pas !`);\n      this.pokemonSelected = pokemon;\n    }\n  }\n}\n","<h1 class=\"center\"> Liste des Pokémons </h1>\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div *ngFor=\"let pokemon of pokemonList\" class=\"col m4 s6\" pokemonBorderCard>\r\n            <div class=\"card horizontal\">\r\n                <div class=\"card-image\">\r\n                    <img [src]=\"pokemon.picture\">\r\n                </div>\r\n                <div class=\"card-stacked\">\r\n                    <div class=\"card-content\">\r\n                        <p>{{ pokemon.name }}</p>\r\n                        <p><small>{{ pokemon.created | date: 'dd/MM/yyyy' }}</small></p>\r\n                        <span \r\n                        *ngFor=\"let type of pokemon.types\" \r\n                        class=\"{{ type | pokemonTypeColor }}\"\r\n                        >\r\n                            {{ type }} \r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"mappings":"AACA,SAASA,QAAQ,QAAQ,qBAAqB;;;;;;;ICYtBC,EAAA,CAAAC,cAAA,WAGC;;IACGD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IAHPH,EAAA,CAAAI,UAAA,CAAAJ,EAAA,CAAAK,WAAA,OAAAC,OAAA,EAAqC;IAEjCN,EAAA,CAAAO,SAAA,GACJ;IADIP,EAAA,CAAAQ,kBAAA,MAAAF,OAAA,MACJ;;;;;IAdhBN,EAAA,CAAAC,cAAA,aAA6E;IAGjED,EAAA,CAAAS,SAAA,aAA6B;IACjCT,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,aAA0B;IAEfD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACzBH,EAAA,CAAAC,cAAA,QAAG;IAAOD,EAAA,CAAAE,MAAA,IAA0C;;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAC5DH,EAAA,CAAAU,UAAA,KAAAC,mCAAA,mBAKO;IACXX,EAAA,CAAAG,YAAA,EAAM;;;;IAZDH,EAAA,CAAAO,SAAA,GAAuB;IAAvBP,EAAA,CAAAY,UAAA,QAAAC,UAAA,CAAAC,OAAA,EAAAd,EAAA,CAAAe,aAAA,CAAuB;IAIrBf,EAAA,CAAAO,SAAA,GAAkB;IAAlBP,EAAA,CAAAgB,iBAAA,CAAAH,UAAA,CAAAI,IAAA,CAAkB;IACXjB,EAAA,CAAAO,SAAA,GAA0C;IAA1CP,EAAA,CAAAgB,iBAAA,CAAAhB,EAAA,CAAAkB,WAAA,QAAAL,UAAA,CAAAM,OAAA,gBAA0C;IAEnCnB,EAAA,CAAAO,SAAA,GAAgB;IAAhBP,EAAA,CAAAY,UAAA,YAAAC,UAAA,CAAAO,KAAA,CAAgB;;;ADLzD,OAAM,MAAOC,YAAY;EALzBC,YAAA;IAME;IACA,KAAAC,WAAW,GAAcxB,QAAQ;;EAGjCyB,QAAQA,CAAA;IACNC,OAAO,CAACC,KAAK,CAAC,IAAI,CAACH,WAAW,CAAC;EACjC;EAEA;EACAI,aAAaA,CAACC,SAAiB;IAC7B,MAAMC,OAAO,GAAwB,IAAI,CAACN,WAAW,CAACO,IAAI,CACvDD,OAAO,IAAKA,OAAO,CAACE,EAAE,IAAI,CAACH,SAAS,CACtC;IAED,IAAIC,OAAO,EAAE;MACXJ,OAAO,CAACO,GAAG,CAAC,gCAAgCH,OAAO,CAACZ,IAAI,IAAI,CAAC;MAC7D,IAAI,CAACgB,eAAe,GAAGJ,OAAO;KAC/B,MAAM;MACLJ,OAAO,CAACO,GAAG,CAAC,mCAAmC,CAAC;MAChD,IAAI,CAACC,eAAe,GAAGJ,OAAO;;EAElC;EAAC,QAAAK,CAAA,G;qBAtBUb,YAAY;EAAA;EAAA,QAAAc,EAAA,G;UAAZd,YAAY;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTzB1C,EAAA,CAAAC,cAAA,YAAmB;QAACD,EAAA,CAAAE,MAAA,gCAAmB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAE5CH,EAAA,CAAAC,cAAA,aAAuB;QAEfD,EAAA,CAAAU,UAAA,IAAAkC,2BAAA,kBAkBM;QACV5C,EAAA,CAAAG,YAAA,EAAM;;;QAnBuBH,EAAA,CAAAO,SAAA,GAAc;QAAdP,EAAA,CAAAY,UAAA,YAAA+B,GAAA,CAAApB,WAAA,CAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}