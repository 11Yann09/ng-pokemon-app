{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from \"@angular/core\";\nexport let PokemonFormComponent = class PokemonFormComponent {\n  constructor(pokemonService, router) {\n    this.pokemonService = pokemonService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.types = this.pokemonService.getPokemonTypeListe();\n    this.isAddForm = this.router.url.includes(\"add\");\n  }\n  hasType(type) {\n    return this.pokemon.types.includes(type);\n  }\n  selectType($event, type) {\n    const isChecked = $event.target.checked;\n    if (isChecked) {\n      this.pokemon.types.push(type);\n    } else {\n      const index = this.pokemon.types.indexOf(type);\n      this.pokemon.types.splice(index, 1);\n    }\n  }\n  isTypesValid(type) {\n    if (this.pokemon.types.length == 1 && this.hasType(type)) {\n      return false;\n    }\n    if (this.pokemon.types.length > 2 && !this.hasType(type)) {\n      return false;\n    }\n    return true;\n  }\n  onSubmit() {\n    if (this.isAddForm) {\n      this.pokemonService.addPokemon(this.pokemon).subscribe(pokemon => this.router.navigate([\"/pokemon\", pokemon.id]));\n    } else {\n      this.pokemonService.updatePokemon(this.pokemon).subscribe(() => this.router.navigate([\"/pokemon\", this.pokemon.id]));\n    }\n  }\n};\n__decorate([Input()], PokemonFormComponent.prototype, \"pokemon\", void 0);\nPokemonFormComponent = __decorate([Component({\n  selector: \"app-pokemon-form\",\n  templateUrl: \"./pokemon-form.component.html\",\n  styleUrls: [\"./pokemon-form.component.css\"]\n})], PokemonFormComponent);","map":{"version":3,"names":["Component","Input","PokemonFormComponent","constructor","pokemonService","router","ngOnInit","types","getPokemonTypeListe","isAddForm","url","includes","hasType","type","pokemon","selectType","$event","isChecked","target","checked","push","index","indexOf","splice","isTypesValid","length","onSubmit","addPokemon","subscribe","navigate","id","updatePokemon","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\YANN\\Dev\\ng-pokemon-app\\src\\app\\pokemon\\pokemon-form\\pokemon-form.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Pokemon } from \"../pokemon\";\nimport { PokemonService } from \"../pokemon.service\";\n\n@Component({\n  selector: \"app-pokemon-form\",\n  templateUrl: \"./pokemon-form.component.html\",\n  styleUrls: [\"./pokemon-form.component.css\"],\n})\nexport class PokemonFormComponent implements OnInit {\n  @Input() pokemon: Pokemon;\n  types: string[];\n  isAddForm: boolean;\n\n  constructor(private pokemonService: PokemonService, private router: Router) {}\n\n  ngOnInit() {\n    this.types = this.pokemonService.getPokemonTypeListe();\n    this.isAddForm = this.router.url.includes(\"add\");\n  }\n\n  hasType(type: string): boolean {\n    return this.pokemon.types.includes(type);\n  }\n\n  selectType($event: Event, type: string) {\n    const isChecked: boolean = ($event.target as HTMLInputElement).checked;\n    if (isChecked) {\n      this.pokemon.types.push(type);\n    } else {\n      const index = this.pokemon.types.indexOf(type);\n      this.pokemon.types.splice(index, 1);\n    }\n  }\n\n  isTypesValid(type: string): boolean {\n    if (this.pokemon.types.length == 1 && this.hasType(type)) {\n      return false;\n    }\n    if (this.pokemon.types.length > 2 && !this.hasType(type)) {\n      return false;\n    }\n    return true;\n  }\n\n  onSubmit() {\n    if (this.isAddForm) {\n      this.pokemonService\n        .addPokemon(this.pokemon)\n        .subscribe((pokemon: Pokemon) =>\n          this.router.navigate([\"/pokemon\", pokemon.id])\n        );\n    } else {\n      this.pokemonService\n        .updatePokemon(this.pokemon)\n        .subscribe(() => this.router.navigate([\"/pokemon\", this.pokemon.id]));\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAgB,eAAe;AAUjD,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAK/BC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE7EC,QAAQA,CAAA;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACH,cAAc,CAACI,mBAAmB,EAAE;IACtD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,MAAM,CAACK,GAAG,CAACC,QAAQ,CAAC,KAAK,CAAC;EAClD;EAEAC,OAAOA,CAACC,IAAY;IAClB,OAAO,IAAI,CAACC,OAAO,CAACP,KAAK,CAACI,QAAQ,CAACE,IAAI,CAAC;EAC1C;EAEAE,UAAUA,CAACC,MAAa,EAAEH,IAAY;IACpC,MAAMI,SAAS,GAAaD,MAAM,CAACE,MAA2B,CAACC,OAAO;IACtE,IAAIF,SAAS,EAAE;MACb,IAAI,CAACH,OAAO,CAACP,KAAK,CAACa,IAAI,CAACP,IAAI,CAAC;KAC9B,MAAM;MACL,MAAMQ,KAAK,GAAG,IAAI,CAACP,OAAO,CAACP,KAAK,CAACe,OAAO,CAACT,IAAI,CAAC;MAC9C,IAAI,CAACC,OAAO,CAACP,KAAK,CAACgB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;EAEvC;EAEAG,YAAYA,CAACX,IAAY;IACvB,IAAI,IAAI,CAACC,OAAO,CAACP,KAAK,CAACkB,MAAM,IAAI,CAAC,IAAI,IAAI,CAACb,OAAO,CAACC,IAAI,CAAC,EAAE;MACxD,OAAO,KAAK;;IAEd,IAAI,IAAI,CAACC,OAAO,CAACP,KAAK,CAACkB,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAACb,OAAO,CAACC,IAAI,CAAC,EAAE;MACxD,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;EAEAa,QAAQA,CAAA;IACN,IAAI,IAAI,CAACjB,SAAS,EAAE;MAClB,IAAI,CAACL,cAAc,CAChBuB,UAAU,CAAC,IAAI,CAACb,OAAO,CAAC,CACxBc,SAAS,CAAEd,OAAgB,IAC1B,IAAI,CAACT,MAAM,CAACwB,QAAQ,CAAC,CAAC,UAAU,EAAEf,OAAO,CAACgB,EAAE,CAAC,CAAC,CAC/C;KACJ,MAAM;MACL,IAAI,CAAC1B,cAAc,CAChB2B,aAAa,CAAC,IAAI,CAACjB,OAAO,CAAC,CAC3Bc,SAAS,CAAC,MAAM,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,UAAU,EAAE,IAAI,CAACf,OAAO,CAACgB,EAAE,CAAC,CAAC,CAAC;;EAE3E;CACD;AAhDUE,UAAA,EAAR/B,KAAK,EAAE,C,oDAAkB;AADfC,oBAAoB,GAAA8B,UAAA,EALhChC,SAAS,CAAC;EACTiC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWjC,oBAAoB,CAiDhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}